{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-reportingadf-uk"
		},
		"ls_ablobs_covidreportingsauk_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablobs_covidreportingsauk'"
		},
		"ls_adls_covidreportingadlsuk_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_covidreportingadlsuk'"
		},
		"ls_adls_covidreportingadlsuk_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidreportingadlsuk.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_population_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingesting the population by age data file from Azure Blob storage to ADLS. This is a copy function. Using Azure IR.",
				"activities": [
					{
						"name": "Check If Exists",
						"description": "The Validation Activity in Azure Data Factory is a control flow activity that is used to ensure that certain preconditions are met before a pipeline continues its execution. If the execution fails even after retry and timed out, we can trigger error handling mechanisms.",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_ablobs_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "1.00:00:00",
							"sleep": 600,
							"minimumSize": 1024
						}
					},
					{
						"name": "Get File Metadata",
						"description": "Getting the Metadata and checking if the required details are there, then one continue with the pipeline",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Check If Exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_ablobs_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"size",
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Column count equals",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get File Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get File Metadata').output.columnCount,13)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send Email Notification",
									"description": "this is used in case the pipeline fails to execute. It sends an email.",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://webactivity",
										"method": "POST",
										"headers": {},
										"body": "dummy"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Population Data",
									"description": "Copying the population data from Blob to Data Lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_ablobs_population_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_population_raw_tsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ablobs_population_raw_gz')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_population_raw_tsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ablobs_population_raw_gz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "created this data set for copying this raw zipped file from blob storage. This is the origin for data to be copied.",
				"linkedServiceName": {
					"referenceName": "ls_ablobs_covidreportingsauk",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablobs_covidreportingsauk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_population_raw_tsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingadlsuk",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population_by_age_tsv",
						"folderPath": "population",
						"fileSystem": "raw"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingadlsuk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablobs_covidreportingsauk')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "naming convention- ls - linked service\nablobs- type of storage- azure blob storage\nstorage account name where this container is created",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablobs_covidreportingsauk_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_covidreportingadlsuk')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "la- linked service\nadls- type of storage\ncovidreportingadlsuk- storage account name",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_covidreportingadlsuk_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_covidreportingadlsuk_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2024-01-16T16:19:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		}
	]
}